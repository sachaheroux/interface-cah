"""
Script pour ajouter la colonne dette_restante √† la table immeubles
"""
from database import SessionLocal
from sqlalchemy import text

def add_dette_restante_column():
    """Ajouter la colonne dette_restante si elle n'existe pas"""
    print("=" * 80)
    print("üîß AJOUT DE LA COLONNE dette_restante")
    print("=" * 80)
    
    session = SessionLocal()
    
    try:
        # V√©rifier si la colonne existe d√©j√†
        print("\n1Ô∏è‚É£ V√©rification de l'existence de la colonne...")
        result = session.execute(text("PRAGMA table_info(immeubles)"))
        columns = [row[1] for row in result]
        
        print(f"‚úÖ Colonnes actuelles: {', '.join(columns)}")
        
        if 'dette_restante' in columns:
            print("‚úÖ La colonne dette_restante existe d√©j√†!")
        else:
            print("\n2Ô∏è‚É£ Ajout de la colonne dette_restante...")
            session.execute(text("""
                ALTER TABLE immeubles 
                ADD COLUMN dette_restante DECIMAL(12, 2) DEFAULT 0
            """))
            session.commit()
            print("‚úÖ Colonne dette_restante ajout√©e avec succ√®s!")
        
        # V√©rifier √† nouveau
        print("\n3Ô∏è‚É£ V√©rification finale...")
        result = session.execute(text("PRAGMA table_info(immeubles)"))
        columns = [row[1] for row in result]
        
        if 'dette_restante' in columns:
            print("‚úÖ La colonne dette_restante est maintenant pr√©sente!")
        else:
            print("‚ùå ERREUR: La colonne n'a pas √©t√© ajout√©e correctement")
        
        print("\n" + "=" * 80)
        print("‚úÖ MIGRATION TERMIN√âE")
        print("=" * 80)
        
    except Exception as e:
        print(f"\n‚ùå ERREUR: {type(e).__name__}: {e}")
        session.rollback()
        
    finally:
        session.close()

if __name__ == "__main__":
    add_dette_restante_column()

