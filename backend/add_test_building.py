#!/usr/bin/env python3
"""
Script pour ajouter un immeuble de test avec des donn√©es financi√®res
"""
import requests
import json

# Configuration
API_URL = "https://interface-cah-backend.onrender.com"

# Donn√©es de l'immeuble de test
test_building = {
    "name": "Immeuble Portfolio Test",
    "address": {
        "street": "456 Rue Portfolio",
        "city": "Montreal",
        "province": "QC",
        "postalCode": "H2H 2H2",
        "country": "Canada"
    },
    "type": "R√©sidentiel",
    "units": 15,
    "floors": 4,
    "yearBuilt": 2021,
    "financials": {
        "purchasePrice": 800000,
        "currentValue": 950000,
        "downPayment": 160000,
        "interestRate": 3.2
    },
    "characteristics": {
        "parking": 20,
        "elevator": True,
        "balconies": 15,
        "storage": True,
        "laundry": True,
        "airConditioning": True,
        "heating": "central",
        "internet": True,
        "security": True
    },
    "contacts": {
        "owner": "CAH Construction Inc.",
        "bank": "Banque Nationale",
        "contractor": "Constructions Pro"
    },
    "notes": "Immeuble de test pour validation du calcul de portfolio"
}

def main():
    try:
        # V√©rifier l'√©tat de l'API
        print("üîç V√©rification de l'API...")
        health_response = requests.get(f"{API_URL}/health")
        if health_response.status_code == 200:
            print("‚úÖ API disponible")
        else:
            print("‚ùå API non disponible")
            return
        
        # Cr√©er l'immeuble
        print("üèóÔ∏è Cr√©ation de l'immeuble de test...")
        response = requests.post(
            f"{API_URL}/api/buildings",
            headers={"Content-Type": "application/json"},
            json=test_building
        )
        
        if response.status_code == 200:
            building_data = response.json()
            print(f"‚úÖ Immeuble cr√©√© avec succ√®s - ID: {building_data.get('id')}")
            print(f"   Nom: {building_data.get('name')}")
            print(f"   Valeur: {building_data.get('financials', {}).get('currentValue', 0):,}$")
        else:
            print(f"‚ùå Erreur lors de la cr√©ation: {response.status_code}")
            print(f"   D√©tails: {response.text}")
            return
        
        # V√©rifier le tableau de bord
        print("üìä V√©rification du tableau de bord...")
        dashboard_response = requests.get(f"{API_URL}/api/dashboard")
        if dashboard_response.status_code == 200:
            dashboard_data = dashboard_response.json()
            print(f"‚úÖ Tableau de bord mis √† jour:")
            print(f"   Total immeubles: {dashboard_data.get('totalBuildings', 0)}")
            print(f"   Total unit√©s: {dashboard_data.get('totalUnits', 0)}")
            print(f"   Valeur portfolio: {dashboard_data.get('portfolioValue', 0):,}$")
            print(f"   Revenus mensuels estim√©s: {dashboard_data.get('monthlyRevenue', 0):,.0f}$")
        else:
            print(f"‚ùå Erreur tableau de bord: {dashboard_response.status_code}")
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

if __name__ == "__main__":
    main() 