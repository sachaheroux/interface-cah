"""
Script pour vider compl√®tement la table paiements_loyers
ATTENTION : Ce script supprime TOUTES les donn√©es de paiements_loyers
"""
from database import SessionLocal
from sqlalchemy import text

def clear_paiements_loyers():
    """Vider la table paiements_loyers"""
    print("=" * 80)
    print("‚ö†Ô∏è  SUPPRESSION DE TOUTES LES DONN√âES DE paiements_loyers")
    print("=" * 80)
    
    session = SessionLocal()
    
    try:
        # Compter les enregistrements avant suppression
        print("\n1Ô∏è‚É£ Comptage des enregistrements...")
        result = session.execute(text("SELECT COUNT(*) FROM paiements_loyers"))
        count_before = result.scalar()
        print(f"üìä Nombre de paiements actuels: {count_before}")
        
        if count_before == 0:
            print("‚úÖ La table est d√©j√† vide!")
            return
        
        # Demander confirmation
        print(f"\n‚ö†Ô∏è  ATTENTION: Vous allez supprimer {count_before} enregistrements!")
        confirmation = input("Tapez 'OUI' pour confirmer la suppression: ")
        
        if confirmation != "OUI":
            print("‚ùå Suppression annul√©e")
            return
        
        # Supprimer toutes les donn√©es
        print("\n2Ô∏è‚É£ Suppression en cours...")
        session.execute(text("DELETE FROM paiements_loyers"))
        session.commit()
        print("‚úÖ Toutes les donn√©es ont √©t√© supprim√©es!")
        
        # V√©rifier que la table est vide
        print("\n3Ô∏è‚É£ V√©rification...")
        result = session.execute(text("SELECT COUNT(*) FROM paiements_loyers"))
        count_after = result.scalar()
        print(f"üìä Nombre de paiements apr√®s suppression: {count_after}")
        
        if count_after == 0:
            print("‚úÖ La table paiements_loyers est maintenant vide!")
        else:
            print(f"‚ö†Ô∏è  Il reste encore {count_after} enregistrements")
        
        print("\n" + "=" * 80)
        print("‚úÖ OP√âRATION TERMIN√âE")
        print("=" * 80)
        
    except Exception as e:
        print(f"\n‚ùå ERREUR: {type(e).__name__}: {e}")
        session.rollback()
        import traceback
        traceback.print_exc()
        
    finally:
        session.close()

if __name__ == "__main__":
    clear_paiements_loyers()

