#!/usr/bin/env python3
"""
Script pour d√©boguer le nombre d'unit√©s
"""

import requests
import sqlite3
from pathlib import Path

API_BASE_URL = "https://interface-cah-backend.onrender.com"
LOCAL_DB_PATH = Path("data/cah_database_local.db")

def check_api_units():
    """V√©rifier les unit√©s via l'API"""
    print("üîç V√©rification des unit√©s via l'API...")
    try:
        response = requests.get(f"{API_BASE_URL}/api/units")
        if response.status_code == 200:
            data = response.json()
            units = data.get('data', [])
            print(f"‚úÖ API: {len(units)} unit√©s")
            for unit in units:
                print(f"  - ID {unit['id_unite']}: {unit['adresse_unite']}")
            return units
        else:
            print(f"‚ùå Erreur API: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        return []

def check_local_units():
    """V√©rifier les unit√©s dans la base locale"""
    print("\nüîç V√©rification des unit√©s dans la base locale...")
    if not LOCAL_DB_PATH.exists():
        print("‚ùå Base de donn√©es locale n'existe pas")
        return []
    
    try:
        conn = sqlite3.connect(LOCAL_DB_PATH)
        cursor = conn.cursor()
        
        cursor.execute("SELECT COUNT(*) FROM unites")
        count = cursor.fetchone()[0]
        print(f"‚úÖ Base locale: {count} unit√©s")
        
        cursor.execute("SELECT id_unite, adresse_unite FROM unites ORDER BY id_unite")
        units = cursor.fetchall()
        for unit in units:
            print(f"  - ID {unit[0]}: {unit[1]}")
        
        conn.close()
        return count
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        return 0

def main():
    print("üêõ Debug du nombre d'unit√©s")
    print("=" * 40)
    
    api_units = check_api_units()
    local_count = check_local_units()
    
    print(f"\nüìä R√©sum√©:")
    print(f"  - API: {len(api_units)} unit√©s")
    print(f"  - Base locale: {local_count} unit√©s")
    
    if len(api_units) != local_count:
        print("‚ö†Ô∏è  Incoh√©rence d√©tect√©e!")
    else:
        print("‚úÖ Coh√©rence OK")

if __name__ == "__main__":
    main()
