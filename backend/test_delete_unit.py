#!/usr/bin/env python3
"""
Script pour tester la suppression d'unit√©s
"""

import requests
import json

# Configuration
API_BASE_URL = "https://interface-cah-backend.onrender.com"

def test_delete_unit():
    """Tester la suppression d'une unit√©"""
    print("üß™ Test de suppression d'unit√©")
    print("=" * 50)
    
    # 1. R√©cup√©rer les unit√©s existantes
    print("1Ô∏è‚É£ R√©cup√©ration des unit√©s existantes...")
    try:
        response = requests.get(f"{API_BASE_URL}/api/units")
        if response.status_code == 200:
            data = response.json()
            units = data.get('data', [])
            print(f"‚úÖ {len(units)} unit√©s trouv√©es")
            
            if units:
                unit_to_delete = units[0]
                print(f"üìã Unit√© √† supprimer: {unit_to_delete['adresse_unite']} (ID: {unit_to_delete['id_unite']})")
                
                # 2. Supprimer l'unit√©
                print(f"\n2Ô∏è‚É£ Suppression de l'unit√© {unit_to_delete['id_unite']}...")
                delete_response = requests.delete(f"{API_BASE_URL}/api/units/{unit_to_delete['id_unite']}")
                
                if delete_response.status_code == 200:
                    result = delete_response.json()
                    print(f"‚úÖ Suppression r√©ussie: {result.get('message', 'Unit√© supprim√©e')}")
                    
                    # 3. V√©rifier que l'unit√© a √©t√© supprim√©e
                    print(f"\n3Ô∏è‚É£ V√©rification de la suppression...")
                    verify_response = requests.get(f"{API_BASE_URL}/api/units")
                    if verify_response.status_code == 200:
                        verify_data = verify_response.json()
                        remaining_units = verify_data.get('data', [])
                        print(f"‚úÖ {len(remaining_units)} unit√©s restantes")
                        
                        # V√©rifier que l'unit√© supprim√©e n'est plus dans la liste
                        deleted_unit_exists = any(u['id_unite'] == unit_to_delete['id_unite'] for u in remaining_units)
                        if not deleted_unit_exists:
                            print("‚úÖ L'unit√© a bien √©t√© supprim√©e de la base de donn√©es")
                        else:
                            print("‚ùå L'unit√© est toujours pr√©sente dans la base de donn√©es")
                    else:
                        print(f"‚ùå Erreur lors de la v√©rification: {verify_response.status_code}")
                else:
                    print(f"‚ùå Erreur lors de la suppression: {delete_response.status_code}")
                    print(f"   R√©ponse: {delete_response.text}")
            else:
                print("‚ö†Ô∏è Aucune unit√© trouv√©e pour tester la suppression")
        else:
            print(f"‚ùå Erreur lors de la r√©cup√©ration des unit√©s: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

if __name__ == "__main__":
    test_delete_unit()
